name: JavaScript Actions Test
run-name: ${{ github.actor }} is testing out Custom JavaScript Action üöÄ
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths: # if activity in this folder or file, permitted. paths-ignore is the opposite
      - '.github/workflows/javascript-action.yml'
      - '.github/actions/javascript-action'

jobs:
  test:
    runs-on: ubuntu-latest
    outputs: # add identifiers by which you can access the output value
      script-file: ${{ steps.publish.outputs.script-file }}
      png-file: ${{ steps.publish.outputs.png-file }}
      UPLOAD_ARTIFACTS: ${{ steps.publish.outputs.UPLOAD_ARTIFACTS }}
    env:
      UPLOAD_ARTIFACTS: true
    steps:
      # Get code from repo
      - name: Get code
        uses: actions/checkout@v3

      # Execute composite action
      - name: 'Set up Python Execution Environment'
        uses: ./.github/actions/py-setup
        with:
          python-version: '3.11'
          caching: 'true'

      # NOTE: JS action here
      - name: Run custom javascript action for a locust test run
        id: js-locust-runner
        uses: ./.github/actions/javascript-action
        with:
          locustfile: ./locustfiles/test.py
          users: 1
          spawn-rate: 1
          run-time: 2s

      - name: Check if JSON cleaned
        run: |
          echo "JSON was cleaned?" && \
            echo "${{ steps.js-locust-runner.outputs.json-cleaned }}"

      # List files
      - name: Check if new files have been produced
        run: |
          source .venv/bin/activate
          echo "üå≤ This is the root directory:"
          ls
          echo "üìÅ These are the logfiles:"
          ls ./logfiles
          echo "üìÅ These are the htmlfiles:"
          ls ./htmlfiles
          echo "üìÅ These are the csvfiles:"
          ls ./csvfiles
          echo "üìÅ These are the jsonfiles:"
          ls ./jsonfiles

      # Cache output files
      - name: Cache logfiles
        id: logfiles-cache
        uses: actions/cache@v3
        with:
          path: ./logfiles/
          # will create a hash of the file, diff key matches mean that changes had occurred to the file
          # can use this cache in different jobs and workflow cycles
          key: deps-node-modules-${{ hashFiles('**/*.log') }}

    # Upload artifacts
      - name: Upload artifacts
        id: upload_step
        if: env.UPLOAD_ARTIFACTS == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: locust-output-files
          path: |
            ./logfiles
            ./htmlfiles
            ./csvfiles
            ./jsonfiles