name: CONTAINER FLOW
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths: # if activity in this folder or file, permitted. paths-ignore is the opposite
      - '.github/workflows/container-flow.yml'
jobs:
#  testing-one:
#    runs-on: ubuntu-latest
#    env:
#      DISABLE: True
#    steps:
#      - name: Get code
#        uses: actions/checkout@v3
#
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v2
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Build Docker image
#        run: docker build -t my-locust-image -f ./Dockerfile .
#
#      - name: Start Docker Compose
#        run: docker compose -f ./docker-compose.yml up --no-build

  testing-two:
    runs-on: ubuntu-latest
    container:
      image: python:3.11
      # NOTE: Can use services without a container!
      env:
        REDIS_HOST: redis
        REDIS_PORT: ${{ secrets.REDIS_PORT }}
        MONGODB_HOST: mongodb
        MONGODB_PORT: ${{ secrets.MONGO_PORT }}
        MONGO_USER: ${{ secrets.MONGO_USER }}
        MONGO_PASS: ${{ secrets.MONGO_PASS }}
    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Opens tcp port <secret> on the host and service container
        ports:
          - 6379:6379
      mongodb:
        # https://www.mongodb.com/compatibility/docker
        image: mongo
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: ${{ secrets.MONGO_USER }}
          MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.MONGO_PASS }}


    steps:
      - name: Get code
        uses: actions/checkout@v3

      # NOTE: Locust Tests
      - name: Run locust tests
        run: |
          python3 -m venv .venv
          . .venv/bin/activate
          pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
          CURR_TIME=$(date +%Y-%m-%d_%Hh-%Mm-%Ss)
          LOG_DIR="./logfiles"
          HTML_DIR="./htmlfiles"
          CSV_DIR="./csvfiles/$CURR_TIME"
          JSON_DIR="./jsonfiles/$CURR_TIME"

          mkdir -p $LOG_DIR
          mkdir -p $HTML_DIR
          mkdir -p $CSV_DIR
          mkdir -p $JSON_DIR
w
          echo "JSON_PATH=./jsonfiles/$CURR_TIME" >> $GITHUB_ENV
          echo "CURR_TIME=$CURR_TIME" >> $GITHUB_ENV

          locust \
            -f locustfiles/test.py \
            --users 25 \
            --spawn-rate 5 \
            --run-time 5s \
            --headless \
            --logfile $LOG_DIR/$(echo $CURR_TIME)_mylog.log --loglevel INFO \
            --html $HTML_DIR/$(echo $CURR_TIME)_myhtml.html \
            --csv $CSV_DIR/$(echo $CURR_TIME) --csv-full-history \
            --json \
            --exit-code-on-error 1 \
            --only-summary | awk '/\[/{flag=1} flag; /\]/{flag=0; print}' > $JSON_DIR/$(echo $CURR_TIME).json

          unset CURR_TIME LOG_DIR HTML_DIR CSV_DIR

    # NOTE: Upload artifacts
      - name: Upload artifacts
        id: upload_step
        uses: actions/upload-artifact@v3
        with:
          name: locust-output-files
          path: |
            ./logfiles/
            ./htmlfiles/
            ./csvfiles/
            ./jsonfiles/

    # NOTE: Redis Test
      - name: Talk to Redis
        if: always()
        id: redis-comm
        run: |
          . .venv/bin/activate
          echo "Running redis test..."
          python3 redis_test.py

      # NOTE: MongoDB Test
      - name: Talk to MongoDB
        if: always()
        id: mongodb-comm
        run: |
          . .venv/bin/activate
          echo "Running mongodb test..."
          python3 mongodb_test.py